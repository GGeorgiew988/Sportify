@model List<PositionModel>
@for (int i = 0; i < Model.Count; i++)
 {
    StarModel starModel = new StarModel(Model[i].EventId,Model[i].Approved);
    <div class="row">
        <h5>@Model[i].Name: </h5>
    </div>
    <div class="row">
        <a type="button" class="btn btn-danger mx-3 mb-2" asp-controller="Users" asp-action="Profile" asp-route-name="@Model[i].Approved.Name">@Model[i].Approved.Name</a>
        @if (@Model[i].Approved.Name != null)
        {
            @await Html.PartialAsync($"_StarRatingPartial", starModel)
        }
        @{
            IDictionary<string, string> rv = new Dictionary<string, string>();
            rv.Add("eventId", Model[i].EventId.ToString());
            rv.Add("positionId", Model[i].Id.ToString());
        }
        @if (@Model[i].ToBeApproved.Exists(u => u.Name == User.Identity.Name))
        {
            <button type="button" class="btn btn-danger mx-3 mb-2" disabled="disabled" style="background-color:orange; color:white;">Waiting</button>
        }
        else if (@Model[i].Approved.Name == null)
        {
            <a class="btn btn-info btn mb-2 ml-4" role="button" asp-controller="Event" asp-all-route-data="@rv" asp-action="JoinUser">Join</a>
        }
        else if (Model[i].Approved.Name == User.Identity.Name)
        {
            <a type="button" class="btn btn-info btn mb-2 ml-4" asp-controller="Event" asp-route-EventId="@int.Parse(rv["eventId"])" asp-route-PositionId="@int.Parse(rv["positionId"])" asp-route-UserId="@Model[i].Approved.Id" asp-action="LeaveUser" style="background-color: red; color:white">Leave</a>
        }
        else
        {
            <a type="button" class="btn btn-info btn mb-2 ml-4" asp-controller="Event" asp-route-EventId="@int.Parse(rv["eventId"])" asp-route-PositionId="@int.Parse(rv["positionId"])" asp-route-UserId="@Model[i].Approved.Id" asp-action="LeaveUser" style="background-color: red; color:white">Kick out</a>
        }
    </div>

    @await Html.PartialAsync($"_AproovePartial", Model[i].ToBeApproved);
 }
